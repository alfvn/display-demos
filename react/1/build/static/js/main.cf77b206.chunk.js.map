{"version":3,"sources":["comoonents/Steps.jsx","App.js","reportWebVitals.js","index.js"],"names":["Steps","props","state","this","stepItems","currentActive","width","onClickItem","className","style","length","map","item","index","onClick","React","Component","App","useState","setCurrentActive","prevBtnDisabled","nextBtnDisabled","useEffect","console","log","value","alert","disabled","count","prevClick","nextClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAiCeA,E,kDA7Bb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,GAFG,E,0CAIlB,WAAS,IAAD,EACiDC,KAAKF,MAArDG,EADD,EACCA,UAAWC,EADZ,EACYA,cAAeC,EAD3B,EAC2BA,MAAOC,EADlC,EACkCA,YAIxC,OACE,sBAAKC,UAAU,iBAAiBC,MAAO,CAACH,MAAOA,GAA/C,UACE,qBAAKE,UAAU,WAAWC,MAAO,CAACH,MAJ5BD,GAAgBD,EAAUM,OAAO,GAAI,IAAM,OAM/CN,EAAUO,KAAI,SAACC,EAAMC,GACnB,OACE,qBACEL,UAAS,oBAAeH,GAAiBQ,GAAS,UAElDC,QAAS,kBAAIP,EAAYK,IAH3B,SAIGA,GAFIA,a,GAlBDG,IAAMC,WC2CXC,MA1Cf,WACE,IAAMb,EAAY,CAChB,EAAE,EAAE,EAAE,GAFK,EAI6Bc,mBAAS,GAJtC,mBAINb,EAJM,KAISc,EAJT,KAWPC,EAAkC,IAAhBf,EAClBgB,EAAkBhB,IAAgBD,EAAUM,OAAO,EAezD,OAPAY,qBAAU,WACRC,QAAQC,IAAInB,MAOZ,sBAAKG,UAAU,MAAf,UACE,cAAC,EAAD,CACEJ,UAAWA,EACXC,cAAeA,EACfE,YATc,SAACkB,GACnBC,MAAM,kFACNH,QAAQC,IAAI,KAAMC,EAAO,oDAQrBnB,MAAM,UACR,sBAAKE,UAAU,gBAAf,UACE,wBAAQmB,SAAUP,EAAiBN,QAAS,kBA7BhC,WAChB,IAAIc,EAAQvB,IACH,GACTc,IAAmBS,GA0BiCC,IAAhD,gCACA,wBAAQF,SAAUN,EAAiBP,QAAS,kBAtBhC,WAChB,IAAIc,EAAQvB,IACHD,EAAUM,OAAO,GAC1BS,IAAmBS,GAmBiCE,IAAhD,uCC5BOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cf77b206.chunk.js","sourcesContent":["import React from 'react'\nimport './Steps.css'\n\nclass Steps extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {}\n  }\n  render(){\n    const {stepItems, currentActive, width, onClickItem} = this.props\n    const computedWidth = ()=>{\n      return (currentActive)/(stepItems.length-1) *100 + '%'\n    }\n    return (\n      <div className='step-container' style={{width: width}}>\n        <div className=\"progress\" style={{width: computedWidth()}}></div>\n        {\n          stepItems.map((item, index)=>{\n            return(\n              <div \n                className={`step-item ${currentActive >= index && 'active'}`} \n                key={item}\n                onClick={()=>onClickItem(item)}>\n                {item}\n              </div>\n            )\n          })\n        }\n      </div>\n    )\n  }\n}\n\nexport default Steps","import './App.css';\nimport { useState, useEffect } from 'react';\nimport Steps from './comoonents/Steps'\n\nfunction App() {\n  const stepItems = [\n    1,2,3,4\n  ]\n  const [currentActive, setCurrentActive] = useState(0)\n\n  const prevClick = ()=>{\n    let count = currentActive\n    if(count>0)\n    setCurrentActive(--count)\n  }\n  const prevBtnDisabled = currentActive===0\n  const nextBtnDisabled = currentActive===stepItems.length-1\n  \n  const nextClick = ()=>{\n    let count = currentActive\n    if(count<stepItems.length-1)\n    setCurrentActive(++count)\n  }\n\n  useEffect(() => {\n    console.log(currentActive)\n  })\n  const onClickItem = (value)=>{\n    alert('请查看控制台以查看选中的值')\n    console.log('%c'+ value, \"background:#2396ef;color:#fff;padding:4px 10px;\")\n  }\n  return (\n    <div className=\"App\">\n      <Steps \n        stepItems={stepItems} \n        currentActive={currentActive} \n        onClickItem={onClickItem}\n        width='600px'/>\n      <div className='btn-container'>\n        <button disabled={prevBtnDisabled} onClick={()=>prevClick()}>上一步</button>   \n        <button disabled={nextBtnDisabled} onClick={()=>nextClick()}>下一步</button> \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}